#
### sightly call function
#
<template data-sly-template.foo><section>Template</section></template>
<div data-sly-call="${'foo'}"></div>
===

<section>Template</section>
#
### sightly call function with empty attribute value
#
<template data-sly-template.foo=""><section>Template</section></template>
<div data-sly-call="${'foo'}"></div>
===

<section>Template</section>
#
### sightly call function with parameter
#
<template data-sly-template.foo="${ @ param }"><section>${param}</section></template>
<div data-sly-call="${'foo' @ param='Template' }"></div>
===

<section>Template</section>
#
### sightly call function with missing parameter
#
<template data-sly-template.foo="${ @ param='Missing parameter' }"><section>${param}</section></template>
<div data-sly-call="${'foo'}"></div>
===

<section></section>
#
### sightly call function can be redeclared
#
<template data-sly-template.foo="${ @ param }"><section>Template 1</section></template>
<template data-sly-template.foo="${ @ param }"><section>Template 2</section></template>
<div data-sly-call="${'foo'}"></div>
===


<section>Template 2</section>
#
### sightly call function in any order
#
<div data-sly-call="${'foo'}"></div>
<div data-sly-call="${foo}"></div>
<template data-sly-template.foo="${ @ param }"><section>Template</section></template>
===
<section>Template</section>
<section>Template</section>

#
### sightly call function receives correct scope
#
<sly data-sly-test.param="${'xyz'}"></sly>
<div data-sly-call="${foo}"></div>
<template data-sly-template.foo="${ @ param }"><section>${param}</section></template>
===

<section></section>

#
### sightly call function can call other templates
#
<template data-sly-template.foo="${@ a}"><div data-sly-call="${'bar' @ a=a}"></div></template>
<template data-sly-template.bar="${@ a}"><section>${a}</section></template>
<div data-sly-call="${'foo' @ a=123}"></div>
===


<section>123</section>
#
###